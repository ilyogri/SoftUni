CREATE PROCEDURE usp_PlaceOrder (@JobId INT, @SerialNumber NVARCHAR(MAX), @Quantity INT)
AS
BEGIN TRAN
    IF(@Quantity < 1)
	BEGIN
	;THROW 50012, 'Part quantity must be more than zero!', 1
	ROLLBACK
	END

	IF(SELECT Status FROM Jobs WHERE JobId = @JobId) = 'Finished'
	BEGIN
	;THROW 50011, 'This job is not active!', 1
	 ROLLBACK
	END

	IF(0 = (SELECT COUNT(JobId) FROM Jobs WHERE JobId = @JobId))
	BEGIN
	;THROW 50013, 'Job not found!', 1
	ROLLBACK
	END

	IF(0 = (SELECT COUNT(SerialNumber) FROM Parts WHERE SerialNumber = @SerialNumber))
	BEGIN
	;THROW 50014, 'Part not found!', 1
	ROLLBACK
	END

	--IF(0 < (SELECT COUNT(OrderId) FROM Orders WHERE JobId = @JobId AND IssueDate IS NOT NULL))
	--BEGIN
	-- --INSERT INTO Orders(JobId)
	-- --VALUES (@JobId)

	-- UPDATE OrderParts
	-- SET Quantity = @Quantity
	-- WHERE OrderId = (SELECT OrderId FROM Orders WHERE JobId = @JobId)
	-- AND PartId = (SELECT PartId FROM Parts WHERE SerialNumber = @SerialNumber)

	-- UPDATE Orders
	-- SET IssueDate = NULL
	-- WHERE JobId = @JobId
	--END

	--ELSE
	-- BEGIN
	--  UPDATE OrderParts
	--  SET Quantity += @Quantity
	--  WHERE OrderId = (SELECT OrderId FROM Orders WHERE JobId = @JobId)
	-- END
	IF(0 < (SELECT COUNT(PartId) FROM OrderParts WHERE PartId = (
														SELECT PartId FROM Parts
														WHERE SerialNumber = @SerialNumber))
																 )
	BEGIN
	  UPDATE OrderParts
	  SET Quantity += @Quantity
	  WHERE PartId = (SELECT PartId FROM Parts WHERE SerialNumber = @SerialNumber)
	END
COMMIT